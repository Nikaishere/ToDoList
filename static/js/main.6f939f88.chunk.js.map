{"version":3,"sources":["components/Form.js","App.js","index.js"],"names":["Form","_ref","newTask","setNewTask","addTask","React","createElement","Fragment","className","value","onChange","event","target","type","alt","placeholder","onClick","App","_useState","useState","id","title","status","_useState2","_slicedToArray","toDo","setToDo","_useState3","_useState4","newEntry","length","concat","_toConsumableArray","sort","a","b","map","task","index","key","e","_objectSpread","CrossOut","FaCheckSquare","ReactDOM","render","document","getElementById"],"mappings":"8OA2BeA,EAvBF,SAAHC,GAA0C,IAApCC,EAAOD,EAAPC,QAASC,EAAUF,EAAVE,WAAYC,EAAOH,EAAPG,QACnC,OACEC,IAAAC,cAAAD,IAAAE,SAAA,KAEEF,IAAAC,cAAA,OAAKE,UAAU,kBACbH,IAAAC,cAAA,SACEG,MAAOP,EACPQ,SAAU,SAAAC,GAAK,OAAIR,EAAWQ,EAAMC,OAAOH,QAC3CI,KAAK,OACLC,IAAI,cACJC,YAAY,iBAIhBV,IAAAC,cAAA,WACAD,IAAAC,cAAA,UAAQU,QAASZ,EAASI,UAAU,WAAU,YAG9CH,IAAAC,cAAA,aCiDSW,MAlEf,WAGE,IAAAC,EAAwBC,mBAAS,CAC/B,CAAEC,GAAI,EAAGC,MAAO,oBAAqBC,QAAQ,GAC7C,CAAEF,GAAI,EAAGC,MAAO,+BAAgCC,QAAQ,GACxD,CAAEF,GAAI,EAAGC,MAAO,sCAAuCC,QAAQ,KAC/DC,EAAAC,YAAAN,EAAA,GAJKO,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAMpBI,EAA8BR,mBAAS,IAAGS,EAAAJ,YAAAG,EAAA,GAAnCzB,EAAO0B,EAAA,GAAEzB,EAAUyB,EAAA,GAuB1B,OACEvB,IAAAC,cAAA,OAAKE,UAAU,OACbH,IAAAC,cAAA,WAAM,IAACD,IAAAC,cAAA,WACPD,IAAAC,cAAA,UAAI,oCACJD,IAAAC,cAAA,WACAD,IAAAC,cAAA,WACAD,IAAAC,cAACN,EAAI,CAACE,QAASA,EAASC,WAAYA,EAAYC,QA1BpC,WACd,GAAIF,EAAS,CACX,IACI2B,EAAW,CAAET,GADPK,EAAKK,OAAS,EACET,MAAOnB,EAASoB,QAAQ,GAClDI,EAAQ,GAADK,OAAAC,YAAKP,GAAI,CAAEI,KAClB1B,EAAW,QAuBVsB,GACCA,EAEGQ,MAAK,SAACC,EAAGC,GAAC,OAAKD,EAAEb,MAAQc,EAAEd,SAC3Be,KAAI,SAACC,EAAMC,GACV,OACEjC,IAAAC,cAACD,IAAME,SAAQ,CAACgC,IAAKF,EAAKjB,IACxBf,IAAAC,cAAA,OAAKE,UAAU,QACbH,IAAAC,cAAA,OAAKE,UAAW6B,EAAKf,OAAS,OAAS,IACrCjB,IAAAC,cAAA,QAAME,UAAU,cAAc8B,EAAQ,GACtCjC,IAAAC,cAAA,QAAME,UAAU,YAAY6B,EAAKhB,QAGnChB,IAAAC,cAAA,OAAKU,QAAS,SAAAwB,GAAC,OA/Bd,SAAApB,GACf,IAAIlB,EAAUuB,EAAKW,KAAI,SAAAC,GACrB,OAAIA,EAAKjB,KAAOA,EACdqB,wBAAA,GAAYJ,GAAI,IAAEf,QAASe,EAAKf,SAE3Be,KAETX,EAAQxB,GAwByBwC,CAASL,EAAKjB,KAAKZ,UAAU,eAC9CH,IAAAC,cAAA,YACED,IAAAC,cAACqC,IAAa,eCvDpCC,IAASC,OAAOxC,IAAAC,cAACW,EAAG,MAAK6B,SAASC,eAAe,U","file":"static/js/main.6f939f88.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n//import './Form.css';\r\n//import { Button } from \"@material-tailwind/react\";\r\n\r\nconst Form = ({ newTask, setNewTask, addTask }) => {\r\n  return (\r\n    <>\r\n      {/* Form*/}\r\n      <div className=\"form-container\">\r\n        <input\r\n          value={newTask}\r\n          onChange={event => setNewTask(event.target.value)}\r\n          type=\"text\"\r\n          alt=\"insert task\"\r\n          placeholder=\"Add wish...\"\r\n        ></input>\r\n      </div>\r\n\r\n      <br />\r\n      <button onClick={addTask} className=\"btn-add\">\r\n        Add wish\r\n      </button>\r\n      <br />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport { FaCheckSquare } from \"react-icons/fa\";\r\nimport Form from \"./components/Form\";\r\n\r\nfunction App() {\r\n  //prelisted tasks   //array of objects.\r\n  //true for completed talk,false for not completed.\r\n  const [toDo, setToDo] = useState([\r\n    { id: 1, title: \"Travel to Iceland\", status: false },\r\n    { id: 2, title: \"Start working as a developer\", status: false },\r\n    { id: 3, title: \"Avoid winter moving to a warm place\", status: false }\r\n  ]);\r\n  // to save new task\r\n  const [newTask, setNewTask] = useState(\"\");\r\n\r\n  //function to add task\r\n  const addTask = () => {\r\n    if (newTask) {\r\n      let num = toDo.length + 1;\r\n      let newEntry = { id: num, title: newTask, status: false };\r\n      setToDo([...toDo, newEntry]);\r\n      setNewTask(\"\");\r\n    }\r\n  };\r\n\r\n  //function to cross out task\r\n  const CrossOut = id => {\r\n    let newTask = toDo.map(task => {\r\n      if (task.id === id) {\r\n        return { ...task, status: !task.status };\r\n      }\r\n      return task;\r\n    });\r\n    setToDo(newTask);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <br /> <br />\r\n      <h2>THINGS I WANT TO DO BEFORE I DIE</h2>\r\n      <br />\r\n      <br />\r\n      <Form newTask={newTask} setNewTask={setNewTask} addTask={addTask} />\r\n      {/* Display tasks*/}\r\n      {toDo &&\r\n        toDo\r\n          //BONUS!! that doesnt work\r\n          .sort((a, b) => a.title > b.title)\r\n          .map((task, index) => {\r\n            return (\r\n              <React.Fragment key={task.id}>\r\n                <div className=\"task\">\r\n                  <div className={task.status ? \"done\" : \"\"}>\r\n                    <span className=\"taskNumber\">{index + 1}</span>\r\n                    <span className=\"taskText\">{task.title}</span>\r\n                  </div>\r\n\r\n                  <div onClick={e => CrossOut(task.id)} className=\"iconWrapper\">\r\n                    <span>\r\n                      <FaCheckSquare />\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </React.Fragment>\r\n            );\r\n          })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}